// Code generated by protoc-gen-go.
// source: message.proto
// DO NOT EDIT!

/*
Package message is a generated protocol buffer package.

It is generated from these files:
	message.proto

It has these top-level messages:
	ChatMessage
	FriendGroupMessage
	GeneralMessage
	User
	SendQueue
	RecvQueue
	AckQueue
	UserInfor
	Thread
	MonitorServerStatus
	RequestInfo
	MonitorStatus
*/
package message

import proto "github.com/golang/protobuf/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

type ChatMessage struct {
	SId              uint64 `protobuf:"varint,1,opt" json:"SId,omitempty"`
	SenderId         uint64 `protobuf:"varint,2,opt" json:"SenderId,omitempty"`
	ReceiverId       uint64 `protobuf:"varint,3,opt" json:"ReceiverId,omitempty"`
	MessageBody      string `protobuf:"bytes,4,opt" json:"MessageBody,omitempty"`
	RequesTtimeStamp uint64 `protobuf:"varint,5,opt" json:"RequesTtimeStamp,omitempty"`
	SendId           uint64 `protobuf:"varint,6,opt" json:"SendId,omitempty"`
}

func (m *ChatMessage) Reset()         { *m = ChatMessage{} }
func (m *ChatMessage) String() string { return proto.CompactTextString(m) }
func (*ChatMessage) ProtoMessage()    {}

type FriendGroupMessage struct {
	SId              uint64 `protobuf:"varint,1,opt" json:"SId,omitempty"`
	RootId           uint64 `protobuf:"varint,2,opt" json:"RootId,omitempty"`
	Parent           uint64 `protobuf:"varint,3,opt" json:"Parent,omitempty"`
	SenderId         uint64 `protobuf:"varint,4,opt" json:"SenderId,omitempty"`
	ReceiverId       uint64 `protobuf:"varint,5,opt" json:"ReceiverId,omitempty"`
	MessageBody      string `protobuf:"bytes,6,opt" json:"MessageBody,omitempty"`
	RequestTimeStamp uint64 `protobuf:"varint,7,opt" json:"RequestTimeStamp,omitempty"`
}

func (m *FriendGroupMessage) Reset()         { *m = FriendGroupMessage{} }
func (m *FriendGroupMessage) String() string { return proto.CompactTextString(m) }
func (*FriendGroupMessage) ProtoMessage()    {}

type GeneralMessage struct {
	MessageType        int32               `protobuf:"varint,1,opt,name=messageType" json:"messageType,omitempty"`
	SendId             uint64              `protobuf:"varint,2,opt" json:"SendId,omitempty"`
	SenderId           uint64              `protobuf:"varint,3,opt" json:"SenderId,omitempty"`
	ReceiverId         uint64              `protobuf:"varint,4,opt" json:"ReceiverId,omitempty"`
	Chatmessage        *ChatMessage        `protobuf:"bytes,5,opt" json:"Chatmessage,omitempty"`
	Friendgroupmessage *FriendGroupMessage `protobuf:"bytes,6,opt" json:"Friendgroupmessage,omitempty"`
	RequestTimeStamp   uint64              `protobuf:"varint,7,opt" json:"RequestTimeStamp,omitempty"`
}

func (m *GeneralMessage) Reset()         { *m = GeneralMessage{} }
func (m *GeneralMessage) String() string { return proto.CompactTextString(m) }
func (*GeneralMessage) ProtoMessage()    {}

func (m *GeneralMessage) GetChatmessage() *ChatMessage {
	if m != nil {
		return m.Chatmessage
	}
	return nil
}

func (m *GeneralMessage) GetFriendgroupmessage() *FriendGroupMessage {
	if m != nil {
		return m.Friendgroupmessage
	}
	return nil
}

type User struct {
	UserId    uint64 `protobuf:"varint,1,opt" json:"UserId,omitempty"`
	RgId      uint32 `protobuf:"varint,2,opt" json:"RgId,omitempty"`
	SendId    uint64 `protobuf:"varint,3,opt" json:"SendId,omitempty"`
	ReceiveId uint64 `protobuf:"varint,4,opt" json:"ReceiveId,omitempty"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}

type SendQueue struct {
	// sendid => message
	MessageMap map[uint64]*GeneralMessage `protobuf:"bytes,1,rep" json:"MessageMap,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *SendQueue) Reset()         { *m = SendQueue{} }
func (m *SendQueue) String() string { return proto.CompactTextString(m) }
func (*SendQueue) ProtoMessage()    {}

func (m *SendQueue) GetMessageMap() map[uint64]*GeneralMessage {
	if m != nil {
		return m.MessageMap
	}
	return nil
}

type RecvQueue struct {
	// userid => sendQueue
	MessageMap map[uint64]*SendQueue `protobuf:"bytes,1,rep" json:"MessageMap,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *RecvQueue) Reset()         { *m = RecvQueue{} }
func (m *RecvQueue) String() string { return proto.CompactTextString(m) }
func (*RecvQueue) ProtoMessage()    {}

func (m *RecvQueue) GetMessageMap() map[uint64]*SendQueue {
	if m != nil {
		return m.MessageMap
	}
	return nil
}

type AckQueue struct {
	// sendid => message
	MessageMap map[uint64]*GeneralMessage `protobuf:"bytes,1,rep" json:"MessageMap,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *AckQueue) Reset()         { *m = AckQueue{} }
func (m *AckQueue) String() string { return proto.CompactTextString(m) }
func (*AckQueue) ProtoMessage()    {}

func (m *AckQueue) GetMessageMap() map[uint64]*GeneralMessage {
	if m != nil {
		return m.MessageMap
	}
	return nil
}

type UserInfor struct {
	SendId          uint64 `protobuf:"varint,1,opt" json:"SendId,omitempty"`
	SendAckId       uint64 `protobuf:"varint,2,opt" json:"SendAckId,omitempty"`
	ReceiveId       uint64 `protobuf:"varint,3,opt" json:"ReceiveId,omitempty"`
	ClientReceiveId uint64 `protobuf:"varint,4,opt" json:"ClientReceiveId,omitempty"`
	// UserList userlist = 5;
	UserMap     map[uint64]*User `protobuf:"bytes,5,rep" json:"UserMap,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SendedQueue *SendQueue       `protobuf:"bytes,6,opt" json:"SendedQueue,omitempty"`
	RecvedQueue *RecvQueue       `protobuf:"bytes,7,opt" json:"RecvedQueue,omitempty"`
	AckedQueue  *AckQueue        `protobuf:"bytes,8,opt" json:"AckedQueue,omitempty"`
}

func (m *UserInfor) Reset()         { *m = UserInfor{} }
func (m *UserInfor) String() string { return proto.CompactTextString(m) }
func (*UserInfor) ProtoMessage()    {}

func (m *UserInfor) GetUserMap() map[uint64]*User {
	if m != nil {
		return m.UserMap
	}
	return nil
}

func (m *UserInfor) GetSendedQueue() *SendQueue {
	if m != nil {
		return m.SendedQueue
	}
	return nil
}

func (m *UserInfor) GetRecvedQueue() *RecvQueue {
	if m != nil {
		return m.RecvedQueue
	}
	return nil
}

func (m *UserInfor) GetAckedQueue() *AckQueue {
	if m != nil {
		return m.AckedQueue
	}
	return nil
}

type Thread struct {
	SId         uint64            `protobuf:"varint,1,opt" json:"SId,omitempty"`
	MessageList []*GeneralMessage `protobuf:"bytes,2,rep" json:"MessageList,omitempty"`
}

func (m *Thread) Reset()         { *m = Thread{} }
func (m *Thread) String() string { return proto.CompactTextString(m) }
func (*Thread) ProtoMessage()    {}

func (m *Thread) GetMessageList() []*GeneralMessage {
	if m != nil {
		return m.MessageList
	}
	return nil
}

// 一个服务器的状态消息，表明监控项目是什么, 什么服务器 时间 等等
type MonitorServerStatus struct {
	Name          string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Timestamp     int64   `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Servername    string  `protobuf:"bytes,3,opt,name=servername" json:"servername,omitempty"`
	Servertype    string  `protobuf:"bytes,4,opt,name=servertype" json:"servertype,omitempty"`
	Absolutevalue int64   `protobuf:"varint,5,opt,name=absolutevalue" json:"absolutevalue,omitempty"`
	Changesvalue  int64   `protobuf:"varint,6,opt,name=changesvalue" json:"changesvalue,omitempty"`
	Fvalue1       float32 `protobuf:"fixed32,7,opt,name=fvalue1" json:"fvalue1,omitempty"`
	Fvalue2       float32 `protobuf:"fixed32,8,opt,name=fvalue2" json:"fvalue2,omitempty"`
}

func (m *MonitorServerStatus) Reset()         { *m = MonitorServerStatus{} }
func (m *MonitorServerStatus) String() string { return proto.CompactTextString(m) }
func (*MonitorServerStatus) ProtoMessage()    {}

// 请求消息
type RequestInfo struct {
	Snid         int64 `protobuf:"varint,1,opt,name=snid" json:"snid,omitempty"`
	Connectionid int64 `protobuf:"varint,2,opt,name=connectionid" json:"connectionid,omitempty"`
	Index        int64 `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
	Requestime   int64 `protobuf:"varint,4,opt,name=requestime" json:"requestime,omitempty"`
	Responsetime int64 `protobuf:"varint,5,opt,name=responsetime" json:"responsetime,omitempty"`
}

func (m *RequestInfo) Reset()         { *m = RequestInfo{} }
func (m *RequestInfo) String() string { return proto.CompactTextString(m) }
func (*RequestInfo) ProtoMessage()    {}

// client => Monitor server
// code 0x0101
// 作用: 客户端向monitoer server报告自身的信息
type MonitorStatus struct {
	Info   *RequestInfo           `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	Status []*MonitorServerStatus `protobuf:"bytes,2,rep" json:"Status,omitempty"`
}

func (m *MonitorStatus) Reset()         { *m = MonitorStatus{} }
func (m *MonitorStatus) String() string { return proto.CompactTextString(m) }
func (*MonitorStatus) ProtoMessage()    {}

func (m *MonitorStatus) GetInfo() *RequestInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *MonitorStatus) GetStatus() []*MonitorServerStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
}
